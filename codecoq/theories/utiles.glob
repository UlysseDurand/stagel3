DIGEST afd0cbba6a6a12f8be99b9041259498c
FCodecoq.theories.utiles
def 11:20 <> refl_restr
binder 24:24 <> A:1
R38:39 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37:37 Codecoq.theories.utiles <> A:1 var
binder 34:34 <> B:2
R53:54 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52:52 Codecoq.theories.utiles <> A:1 var
R56:57 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55:55 Codecoq.theories.utiles <> A:1 var
binder 47:49 <> ord:3
binder 76:76 <> e:4
R82:85 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R79:79 Codecoq.theories.utiles <> B:2 var
R81:81 Codecoq.theories.utiles <> e:4 var
R86:88 Codecoq.theories.utiles <> ord:3 var
R92:92 Codecoq.theories.utiles <> e:4 var
R90:90 Codecoq.theories.utiles <> e:4 var
def 107:119 <> antisym_restr
binder 123:123 <> A:5
R137:138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R136:136 Codecoq.theories.utiles <> A:5 var
binder 133:133 <> B:6
R152:153 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R151:151 Codecoq.theories.utiles <> A:5 var
R155:156 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R154:154 Codecoq.theories.utiles <> A:5 var
binder 146:148 <> ord:7
binder 175:175 <> e:8
binder 177:177 <> f:9
R183:184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R180:180 Codecoq.theories.utiles <> B:6 var
R182:182 Codecoq.theories.utiles <> e:8 var
R188:190 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R185:185 Codecoq.theories.utiles <> B:6 var
R187:187 Codecoq.theories.utiles <> f:9 var
R198:201 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R191:193 Codecoq.theories.utiles <> ord:7 var
R197:197 Codecoq.theories.utiles <> f:9 var
R195:195 Codecoq.theories.utiles <> e:8 var
R209:212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R202:204 Codecoq.theories.utiles <> ord:7 var
R208:208 Codecoq.theories.utiles <> e:8 var
R206:206 Codecoq.theories.utiles <> f:9 var
R214:216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R213:213 Codecoq.theories.utiles <> e:8 var
R217:217 Codecoq.theories.utiles <> f:9 var
def 232:246 <> transitif_restr
binder 250:250 <> A:10
R264:265 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R263:263 Codecoq.theories.utiles <> A:10 var
binder 260:260 <> B:11
R279:280 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R278:278 Codecoq.theories.utiles <> A:10 var
R282:283 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R281:281 Codecoq.theories.utiles <> A:10 var
binder 273:275 <> ord:12
binder 302:302 <> e:13
binder 304:304 <> f:14
binder 306:306 <> g:15
R312:314 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R309:309 Codecoq.theories.utiles <> B:11 var
R311:311 Codecoq.theories.utiles <> e:13 var
R318:320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R315:315 Codecoq.theories.utiles <> B:11 var
R317:317 Codecoq.theories.utiles <> f:14 var
R324:326 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R321:321 Codecoq.theories.utiles <> B:11 var
R323:323 Codecoq.theories.utiles <> g:15 var
R334:337 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R327:329 Codecoq.theories.utiles <> ord:12 var
R333:333 Codecoq.theories.utiles <> f:14 var
R331:331 Codecoq.theories.utiles <> e:13 var
R345:348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R338:340 Codecoq.theories.utiles <> ord:12 var
R344:344 Codecoq.theories.utiles <> g:15 var
R342:342 Codecoq.theories.utiles <> f:14 var
R349:351 Codecoq.theories.utiles <> ord:12 var
R355:355 Codecoq.theories.utiles <> g:15 var
R353:353 Codecoq.theories.utiles <> e:13 var
def 370:383 <> ordonned_restr
binder 387:387 <> A:16
R401:402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R400:400 Codecoq.theories.utiles <> A:16 var
binder 397:397 <> B:17
R416:417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R415:415 Codecoq.theories.utiles <> A:16 var
R419:420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R418:418 Codecoq.theories.utiles <> A:16 var
binder 410:412 <> ord:18
R448:451 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R432:441 Codecoq.theories.utiles <> refl_restr def
R445:447 Codecoq.theories.utiles <> ord:18 var
R443:443 Codecoq.theories.utiles <> B:17 var
R471:474 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R452:464 Codecoq.theories.utiles <> antisym_restr def
R468:470 Codecoq.theories.utiles <> ord:18 var
R466:466 Codecoq.theories.utiles <> B:17 var
R475:489 Codecoq.theories.utiles <> transitif_restr def
R493:495 Codecoq.theories.utiles <> ord:18 var
R491:491 Codecoq.theories.utiles <> B:17 var
def 510:524 <> injection_restr
binder 529:529 <> A:19
R543:544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R542:542 Codecoq.theories.utiles <> A:19 var
binder 539:539 <> B:20
R557:560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R556:556 Codecoq.theories.utiles <> A:19 var
R561:563 Coq.Init.Datatypes <> nat ind
binder 552:552 <> f:21
binder 578:578 <> a:22
binder 580:581 <> a':23
R595:597 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R587:590 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R584:584 Codecoq.theories.utiles <> B:20 var
R586:586 Codecoq.theories.utiles <> a:22 var
R591:591 Codecoq.theories.utiles <> B:20 var
R593:594 Codecoq.theories.utiles <> a':23 var
R608:611 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R601:603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R598:598 Codecoq.theories.utiles <> f:21 var
R600:600 Codecoq.theories.utiles <> a:22 var
R604:604 Codecoq.theories.utiles <> f:21 var
R606:607 Codecoq.theories.utiles <> a':23 var
R613:615 Coq.Init.Logic <> ::type_scope:x_'='_x not
R612:612 Codecoq.theories.utiles <> a:22 var
R616:617 Codecoq.theories.utiles <> a':23 var
def 633:649 <> fun_bounded_restr
binder 653:653 <> A:24
R667:668 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R666:666 Codecoq.theories.utiles <> A:24 var
binder 663:663 <> B:25
R680:681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R679:679 Codecoq.theories.utiles <> A:24 var
R682:684 Coq.Init.Datatypes <> nat ind
binder 676:676 <> f:26
R692:698 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R700:701 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 699:699 <> n:27
binder 709:709 <> a:28
R715:718 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R712:712 Codecoq.theories.utiles <> B:25 var
R714:714 Codecoq.theories.utiles <> a:28 var
R722:725 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R719:719 Codecoq.theories.utiles <> f:26 var
R721:721 Codecoq.theories.utiles <> a:28 var
R726:726 Codecoq.theories.utiles <> n:27 var
def 843:856 <> ens_fini_restr
binder 860:860 <> A:29
R874:875 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R873:873 Codecoq.theories.utiles <> A:29 var
binder 870:870 <> B:30
R887:894 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R904:906 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R899:900 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R898:898 Codecoq.theories.utiles <> A:29 var
R901:903 Coq.Init.Datatypes <> nat ind
binder 895:895 <> f:31
R926:929 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R907:921 Codecoq.theories.utiles <> injection_restr def
R925:925 Codecoq.theories.utiles <> f:31 var
R923:923 Codecoq.theories.utiles <> B:30 var
R930:946 Codecoq.theories.utiles <> fun_bounded_restr def
R950:950 Codecoq.theories.utiles <> f:31 var
R948:948 Codecoq.theories.utiles <> B:30 var
prf 960:978 <> inject_restr_implic
binder 991:991 <> A:32
binder 993:993 <> f:33
R999:1000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R998:998 Codecoq.theories.utiles <> A:32 var
binder 996:996 <> B:34
R1012:1013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1011:1011 Codecoq.theories.utiles <> A:32 var
binder 1008:1009 <> B':35
R1025:1025 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1049:1054 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1098:1098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1035:1035 Codecoq.theories.utiles <> A:32 var
binder 1033:1033 <> a:36
R1042:1045 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1038:1039 Codecoq.theories.utiles <> B':35 var
R1041:1041 Codecoq.theories.utiles <> a:36 var
R1046:1046 Codecoq.theories.utiles <> B:34 var
R1048:1048 Codecoq.theories.utiles <> a:36 var
R1074:1077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1055:1069 Codecoq.theories.utiles <> injection_restr def
R1073:1073 Codecoq.theories.utiles <> f:33 var
R1071:1071 Codecoq.theories.utiles <> B:34 var
R1078:1092 Codecoq.theories.utiles <> injection_restr def
R1097:1097 Codecoq.theories.utiles <> f:33 var
R1094:1095 Codecoq.theories.utiles <> B':35 var
prf 1247:1265 <> borned_restr_implic
binder 1278:1278 <> A:37
binder 1280:1280 <> f:38
R1286:1287 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1285:1285 Codecoq.theories.utiles <> A:37 var
binder 1283:1283 <> B:39
R1299:1300 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1298:1298 Codecoq.theories.utiles <> A:37 var
binder 1295:1296 <> B':40
R1312:1312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1336:1341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1389:1389 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1322:1322 Codecoq.theories.utiles <> A:37 var
binder 1320:1320 <> a:41
R1329:1332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1325:1326 Codecoq.theories.utiles <> B':40 var
R1328:1328 Codecoq.theories.utiles <> a:41 var
R1333:1333 Codecoq.theories.utiles <> B:39 var
R1335:1335 Codecoq.theories.utiles <> a:41 var
R1363:1366 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1342:1358 Codecoq.theories.utiles <> fun_bounded_restr def
R1362:1362 Codecoq.theories.utiles <> f:38 var
R1360:1360 Codecoq.theories.utiles <> B:39 var
R1367:1383 Codecoq.theories.utiles <> fun_bounded_restr def
R1388:1388 Codecoq.theories.utiles <> f:38 var
R1385:1386 Codecoq.theories.utiles <> B':40 var
